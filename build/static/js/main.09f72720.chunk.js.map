{"version":3,"sources":["components/SingleCard.jsx","store/actions.js","store/action_type.js","components/addItemModal.jsx","components/AddNewSite.jsx","components/ItemContextMenu.jsx","components/Main.jsx","App.js","serviceWorker.js","store/reducer.js","index.js"],"names":["Meta","Card","SingleCard","handleCardClickRedirect","link","window","location","handleContextMenuClick","id","props","OpenContextMenuOfItem","this","data","name","url","icon","style","width","marginTop","hoverable","onClick","e","onContextMenu","avatar","src","title","Component","connect","dispatch","item","console","log","type","payload","AddItemModal","state","visible","showModal","setState","handleOk","ToggleAddItemModal","handleCancel","onFinish","values","onFinishFailed","errorInfo","modelVisible","onOk","onCancel","initialValues","remember","Item","label","rules","required","message","htmlType","shape","block","AddNewSite","addItemModalVisible","size","addItemLink","addItems","open","span","align","PlusOutlined","marginLeft","ItemContextMenu","handleClick","border","mode","key","EditOutlined","borderBottom","DeleteOutlined","color","Search","Input","Content","Layout","Main","loading","collapsed","items","toggle","SearchOnGoogle","q","componentDidMount","axios","request","method","headers","then","response","localStorage","setItem","JSON","stringify","catch","error","getItem","parse","className","background","margin","padding","minHeight","placeholder","prefix","GoogleOutlined","onSearch","value","enterButton","gutter","map","index","React","App","Boolean","hostname","match","initalState","contextedItem","rootReducer","action","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.09f72720.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Card, Avatar } from \"antd\";\nimport { ContextMenu, ContextMenuTrigger } from \"react-contextmenu\";\nimport { connect } from \"react-redux\";\nimport { OpenContextMenuOfItem } from \"../store/actions\";\nconst { Meta } = Card;\n\nexport class SingleCard extends Component {\n  handleCardClickRedirect = (link) => {\n    window.location = link;\n  };\n  handleContextMenuClick = (id) => {\n    // console.log(id);\n    this.props.OpenContextMenuOfItem(id);\n  };\n  render() {\n    const { name, url, icon } = this.props.data;\n    const { id } = this.props;\n    return (\n      <ContextMenuTrigger id=\"same_unique_identifier\">\n        <Card\n          style={{ width: 300, marginTop: 16 }}\n          hoverable\n          onClick={(e) => this.handleCardClickRedirect(url)}\n          onContextMenu={() => this.handleContextMenuClick(id)}\n        >\n          <Meta avatar={<Avatar src={icon} />} title={name} />\n        </Card>\n      </ContextMenuTrigger>\n    );\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    OpenContextMenuOfItem: (e) => dispatch(OpenContextMenuOfItem(e)),\n  };\n}\n\nexport default connect(null, mapDispatchToProps)(SingleCard);\n","import * as ACTION_TYPE from \"./action_type\";\n\nexport const ToggleAddItemModal = () => {\n  return {\n    type: ACTION_TYPE.AddItemModalVisible,\n    payload: {},\n  };\n};\n\nexport const OpenContextMenuOfItem = (item) => {\n  console.log(item);\n  return {\n    type: ACTION_TYPE.OpenContextMenuOfItem,\n    payload: item,\n  };\n};\n","export const AddItemModalVisible = \"AddItemModalVisible\";\nexport const OpenContextMenuOfItem = \"OpenContextMenuOfItem\";\n","import React, { Component } from \"react\";\nimport { Form, Input, Modal, Button } from \"antd\";\nimport { connect } from \"react-redux\";\nimport { ToggleAddItemModal } from \"../store/actions\";\n\nclass AddItemModal extends Component {\n  state = { visible: false };\n  showModal = () => {\n    this.setState({\n      visible: true,\n    });\n  };\n\n  handleOk = (e) => {\n    // console.log(e);\n    this.props.ToggleAddItemModal();\n  };\n\n  handleCancel = (e) => {\n    // console.log(e);\n    this.props.ToggleAddItemModal();\n  };\n  // componentDidUpdate(prevProps) {\n  //   if (prevProps.visible !== this.props.visible) {\n  //     // console.log(\"update\", this.props.visible);\n  //     let { visible } = this.props;\n  //     this.setState({ visible: visible });\n  //   }\n  // }\n  onFinish = (values) => {\n    console.log(\"Success:\", values);\n  };\n  onFinishFailed = (errorInfo) => {\n    console.log(\"Failed:\", errorInfo);\n  };\n  render() {\n    // const layout = {\n    //   labelCol: {\n    //     span: 8,\n    //   },\n    //   wrapperCol: {\n    //     span: 16,\n    //   },\n    // };\n    // const tailLayout = {\n    //   wrapperCol: {\n    //     offset: 8,\n    //     span: 16,\n    //   },\n    // };\n\n    return (\n      <>\n        <Modal\n          title=\"Add Item\"\n          visible={this.props.modelVisible}\n          onOk={this.handleOk}\n          onCancel={this.handleCancel}\n        >\n          <Form\n            // {...layout}\n            name=\"basic\"\n            initialValues={{\n              remember: true,\n            }}\n            onFinish={this.onFinish}\n            onFinishFailed={this.onFinishFailed}\n          >\n            <Form.Item\n              label=\"Site\"\n              name=\"site\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please input Site Name!\",\n                },\n              ]}\n            >\n              <Input />\n            </Form.Item>\n\n            <Form.Item\n              label=\"URL\"\n              name=\"url\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please input Site URL!\",\n                },\n              ]}\n            >\n              <Input />\n            </Form.Item>\n\n            <Form.Item\n              label=\"Icon\"\n              name=\"icon\"\n              rules={[\n                {\n                  required: false,\n                },\n              ]}\n            >\n              <Input />\n            </Form.Item>\n\n            <Form.Item>\n              <Button type=\"primary\" htmlType=\"submit\" shape=\"round\" block>\n                Add\n              </Button>\n            </Form.Item>\n          </Form>\n        </Modal>\n      </>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  let { modelVisible } = state;\n  return {\n    modelVisible,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    ToggleAddItemModal: () => dispatch(ToggleAddItemModal()),\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddItemModal);\n","import React, { Component } from \"react\";\nimport { Card, Col, Button } from \"antd\";\nimport { PlusOutlined } from \"@ant-design/icons\";\nimport AddItemModal from \"./addItemModal\";\nimport { connect } from \"react-redux\";\nimport { ToggleAddItemModal } from \"../store/actions\";\n// import fire from \"../fire\";\n\nexport class AddNewSite extends Component {\n  state = {\n    addItemModalVisible: false,\n    size: \"small\",\n    addItemLink: \"https://github.com/ssadev/myjsondbs/edit/master/ssdev.json\",\n  };\n\n  addItems = () => {\n    const { addItemLink } = this.state;\n    window.open(addItemLink, \"_blank\");\n  };\n\n  showModal = () => {\n    this.props.ToggleAddItemModal();\n  };\n\n  render() {\n    const { size } = this.state;\n    return (\n      <Col span={4}>\n        <Card style={{ width: 300, marginTop: 16 }} hoverable>\n          <Button\n            type=\"default\"\n            shape=\"circle\"\n            align=\"center\"\n            icon={<PlusOutlined />}\n            size={size}\n            style={{ marginLeft: \"40%\" }}\n            // onClick={this.addItems}\n            onClick={this.showModal}\n          />\n        </Card>\n        <AddItemModal />\n      </Col>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  let { modelVisible } = state;\n  return {\n    modelVisible,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    ToggleAddItemModal: () => dispatch(ToggleAddItemModal()),\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddNewSite);\n","import React, { Component } from \"react\";\nimport { ContextMenu } from \"react-contextmenu\";\nimport { Menu } from \"antd\";\nimport { EditOutlined, DeleteOutlined } from \"@ant-design/icons\";\n\nexport class ItemContextMenu extends Component {\n  handleClick(e) {\n    console.log(\"click\", e);\n  }\n  render() {\n    return (\n      <ContextMenu id=\"same_unique_identifier\">\n        <Menu\n          onClick={this.handleClick}\n          style={{ width: 256, border: \"0.5px solid gray\" }}\n          mode=\"vertical\"\n        >\n          <Menu.Item\n            key=\"1\"\n            icon={<EditOutlined />}\n            style={{ width: 256, borderBottom: \"0.5px solid gray\" }}\n          >\n            Edit\n          </Menu.Item>\n          <Menu.Item key=\"2\" icon={<DeleteOutlined />} style={{ color: \"red\" }}>\n            Delete\n          </Menu.Item>\n        </Menu>\n      </ContextMenu>\n    );\n  }\n}\n\nexport default ItemContextMenu;\n","import React from \"react\";\nimport { Layout, Col, Row, Input } from \"antd\";\nimport { GoogleOutlined } from \"@ant-design/icons\";\nimport axios from \"axios\";\n\nimport SingleCard from \"./SingleCard\";\nimport \"../App.css\";\nimport AddNewSite from \"./AddNewSite\";\nimport ItemContextMenu from \"./ItemContextMenu\";\n\nconst { Search } = Input;\nconst { Content } = Layout;\n\nexport default class Main extends React.Component {\n  state = {\n    loading: false,\n    collapsed: true,\n    size: \"large\",\n    items: [],\n  };\n\n  toggle = () => {\n    this.setState({\n      collapsed: !this.state.collapsed,\n    });\n  };\n  SearchOnGoogle = (q) => {\n    let url = \"https://www.google.com/search?q=\" + q;\n    window.location = url;\n  };\n  componentDidMount = () => {\n    // console.log(\"object\");\n    const options = {\n      method: \"GET\",\n      url: \"https://ssadev.github.io/myjsondbs/ssdev.json\",\n      headers: {},\n    };\n\n    axios\n      .request(options)\n      .then((response) => {\n        console.log(response.data);\n        const { data } = response;\n        this.setState({ items: data });\n        localStorage.setItem(\"items\", JSON.stringify(data));\n      })\n      .catch((error) => {\n        // console.log(error);\n        let data = localStorage.getItem(\"items\");\n        data = JSON.parse(data);\n        this.setState({ items: data });\n        console.log(data);\n      });\n  };\n  render() {\n    const { items } = this.state;\n\n    return (\n      <Layout className=\"site-layout bg-trans\" style={{ background: \"pink\" }}>\n        <Content\n          className=\"site-layout-background bg-trans\"\n          style={{\n            margin: \"24px 16px\",\n            padding: 24,\n            minHeight: 900,\n            background: \"transparent\",\n          }}\n        >\n          <Content\n            className=\"site-layout-background bg-trans\"\n            style={{\n              width: \"50%\",\n              margin: \"24px 25%\",\n              padding: 24,\n              minHeight: 100,\n            }}\n          >\n            <Search\n              placeholder=\"Search On Google\"\n              prefix={<GoogleOutlined className=\"site-form-item-icon\" />}\n              onSearch={(value) => this.SearchOnGoogle(value)}\n              size=\"large\"\n              enterButton\n            />\n          </Content>\n          <div className=\"site-card-wrapper\">\n            <Row gutter={16}>\n              {items.map((data, index) => (\n                <Col span={4} key={index}>\n                  <SingleCard data={data} id={index} />\n                </Col>\n              ))}\n              <AddNewSite />\n            </Row>\n          </div>\n        </Content>\n\n        <ItemContextMenu />\n      </Layout>\n    );\n  }\n}\n","import React from \"react\";\nimport \"antd/dist/antd.css\";\nimport Main from \"./components/Main\";\n\nfunction App() {\n  return (\n    <div className=\"App\" style={{ background: \"pink\" }}>\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as ACTION_TYPE from \"./action_type\";\n\nconst initalState = {\n  modelVisible: false,\n  contextedItem: null,\n};\n\nconst rootReducer = (state = initalState, action) => {\n  // eslint-disable-next-line\n  let payload = action.payload;\n  switch (action.type) {\n    case ACTION_TYPE.AddItemModalVisible:\n      let visible = state.modelVisible ? false : true;\n      console.log(visible);\n      return {\n        ...state,\n        modelVisible: visible,\n      };\n    case ACTION_TYPE.OpenContextMenuOfItem:\n      return {\n        ...state,\n        contextedItem: payload,\n      };\n\n    default:\n      return {\n        ...state,\n      };\n  }\n};\n\nexport default rootReducer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { applyMiddleware, createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport rootReducer from \"./store/reducer.js\";\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}